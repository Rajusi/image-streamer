# List the Volume Group and lvols:
vgs
lvs
list-filesystems

# Mount the root partition
mount /dev/os-vg/root /

#Create temporary directory
mkdir-p /tmp/ImageStreamer

download /etc/os-release ./os-release

#Validate the Image
upload -<<END /tmp/ImageStreamer/validate_image
#! /bin/bash
file="./os-release"
exp_os='"hpelinux"'
if [ -f $file ]
then
	os_name=`cat $file | grep -w "NAME" | awk -F'[=]' '{print $2}'`
	if [[ $os_name == $exp_os ]]
	then
		echo "##########################"
		echo "Image validation successfully completed!!!"
		echo "Detected OS: $os_name"
		echo "Operating system is matching with the expected Operating System"
		echo "##########################"
	else
		echo "##########################"
		echo "Image validation failed : Operating system is NOT matching with the expected Operating System"
		echo "Please ensure that the golden image is of hpelinux"
		echo "##########################"
		exit 1
	fi
else
	echo "##########################"
	echo "Image validation failed : Operating system is NOT matching with the expected Operating System"
	echo "Please ensure that the golden image is of hpelinux"
	echo "##########################"
	exit 1
fi
END
download /tmp/ImageStreamer/validate_image ./validate_image
!source ./validate_image

echo "Check Image Streamer capture details"
-download /ImageStreamerCapture ./ImageStreamerCapture

upload -<<END /tmp/ImageStreamer/check_capture
#!/bin/bash
if [ -f ./ImageStreamerCapture ]; then
    echo "Capture details:"
    cat ./ImageStreamerCapture
else
    echo
    echo "WARNING: HPELinux Golden Image was not captured by Image Streamer."
    echo "Golden Image may not be prepared for correct personalization."
    echo "Recommend deploying Golden Image as is and capturing a new"
    echo "Golden Image using Image Streamer via correct capture Build Plan"
    echo
fi
echo
END
download /tmp/ImageStreamer/check_capture ./check_capture
!source ./check_capture

-rm-f /ImageStreamerCapture

echo "Copy out rc.local"
download /etc/rc.local rc.local
#Take a backup
echo "Take a backup of rc.local"
download /etc/rc.local rc.local.backup

#Setup rc.local file to run scripts at the boot time.
upload -<<END /tmp/ImageStreamer/del_exit_line
#!/bin/bash
#Delete the exit 0 line from the rc.local, which is last line in the file.
sed -i '$d' rc.local
exit 0
END
download /tmp/ImageStreamer/del_exit_line ./del_exit_line
!source ./del_exit_line

!echo "#The following lines has been added from the Image Streamer" >> rc.local
